@using Sistema_de_Gestion_de_Hospitales.FrontEnd.Interfaces
@using System.ComponentModel.DataAnnotations
@using Sistema_de_Gestion_de_Hospitales.Shared
@using MudBlazor

@inject ISnackbar Snackbar
@inject IPacientesService PacientesService
@inject IDialogService DialogService

<PageTitle>Insertando Paciente</PageTitle>

<EditForm Model="@Model" OnValidSubmit="CrearNuevoPaciente">
<MudDialog>
    <DialogContent>
        <DataAnnotationsValidator />
        <ValidationSummary />
            <MudTextField T="string" Label="Nombre" @bind-Value="Model.NombreCompleto" Required="true" />
            <MudSelect T="string" Label="Género" @bind-Value="Model.Genero">
                <MudSelectItem T="string" Value="@("M")" />
                <MudSelectItem T="string" Value="@("F")" />
            </MudSelect>
            <MudTextField T="string" Label="Cédula" Mask="@(new PatternMask("00000000000"))" @bind-Value="Model.Cedula" Required="true" />
            <MudTextField T="string" Label="Teléfono" Mask="@(new PatternMask("0000000000"))" @bind-Value="Model.Telefono" Required="true" />
            <MudTextField T="string" Label="Correo Electrónico" @bind-Value="Model.CorreoElectronico" Required="true" />
            <MudDatePicker PickerVariant="PickerVariant.Dialog" @bind-Date="@fecha" Label="Fecha de Nacimiento" Required="true" />
            <MudTextField T="string" Label="Dirección" AutoGrow Lines="3" @bind-Value="Model.Direccion" Required="true" />
    </DialogContent>
    <DialogActions>
       <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary">Crear</MudButton>
       <MudButton Variant="Variant.Filled" Color="Color.Secondary" @onclick="CancelarCreacion">Cancelar</MudButton>
    </DialogActions>
</MudDialog>
</EditForm>

@code {
    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; }

    [Parameter] 
    public PacienteInsertDTO Model { get; set; }

    [Parameter] 
    public EventCallback OnClose { get; set; }

    private PacienteInsertDTO nuevoPaciente = new PacienteInsertDTO();

    private DateTime? fecha = DateTime.Now;

    protected override async Task OnInitializedAsync()
    {
        Model.FechaNacimiento = DateOnly.FromDateTime(fecha.Value);
    }

    protected override void OnParametersSet()
    {
        nuevoPaciente = Model;
    }

    private async Task CrearNuevoPaciente()
    {
        nuevoPaciente.FechaNacimiento = DateOnly.FromDateTime(fecha.Value);
        var success = await PacientesService.CreatePaciente(nuevoPaciente);
        if (success.IsSuccessStatusCode)
        {
            await OnClose.InvokeAsync(null);
            MudDialog.Close(DialogResult.Ok(true));
        }
        else
        {
            var problemDetails = await success.Content.ReadFromJsonAsync<ProblemDetailsFront>();
            if (problemDetails != null)
            {
                await DialogService.ShowMessageBox("Error", problemDetails.Detail ?? "Error al crear el nuevo paciente.");
            }
        }
    }

    private void CancelarCreacion()
    {
        MudDialog.Cancel();
    }
}
