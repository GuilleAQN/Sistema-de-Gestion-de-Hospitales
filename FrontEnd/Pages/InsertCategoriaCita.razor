@page "/categorias-citas/crear"

@using Sistema_de_Gestion_de_Hospitales.FrontEnd.Interfaces
@using System.ComponentModel.DataAnnotations
@using Sistema_de_Gestion_de_Hospitales.Shared
@using MudBlazor

@inject ISnackbar Snackbar
@inject ICategoriasCitasService CategoriasCitasService
@inject IDialogService DialogService

<EditForm Model="@Model" OnValidSubmit="CrearNuevaCategoria">
<MudDialog>
    <DialogContent>
        <DataAnnotationsValidator />
        <ValidationSummary />
        <MudTextField T="string" Label="Nombre" @bind-Value="nuevaCategoria.Nombre" Required="true" />
        <MudTextField T="string" Label="Descripción" AutoGrow Lines="5" @bind-Value="nuevaCategoria.Descripcion" Required="true" />
    </DialogContent>
    <DialogActions>
        <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary">Crear</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Secondary" @onclick="CancelarCreacion">Cancelar</MudButton>
    </DialogActions>
</MudDialog>
</EditForm>

@code {
    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; }
    [Parameter] 
    public CategoriaCitaInsertDTO Model { get; set; }

    private CategoriaCitaInsertDTO nuevaCategoria = new CategoriaCitaInsertDTO();

    protected override void OnParametersSet()
    {
        nuevaCategoria = Model;
    }

    private async Task CrearNuevaCategoria()
    {
        var success = await CategoriasCitasService.CreateCategoriasCitaAsync(nuevaCategoria);
        if (success > 0)
        {
            MudDialog.Close(DialogResult.Ok(true));
        }
        else
        {
            await DialogService.ShowMessageBox("Error", "No se pudo crear la nueva categoría.");
        }
    }

    private void CancelarCreacion()
    {
        MudDialog.Cancel();
    }
}
