@using Sistema_de_Gestion_de_Hospitales.FrontEnd.Interfaces
@using System.ComponentModel.DataAnnotations
@using Sistema_de_Gestion_de_Hospitales.Shared
@using MudBlazor

@inject ISnackbar Snackbar
@inject IDepartamentosService DepartamentosService
@inject IDialogService DialogService

<PageTitle>Insertando Departamento</PageTitle>

<EditForm Model="@Model" OnValidSubmit="CrearNuevoDepartamento">
<MudDialog>
    <DialogContent>
        <DataAnnotationsValidator />
        <ValidationSummary />
        <MudTextField T="string" Label="Nombre" @bind-Value="Model.Nombre" Required="true" />
            <MudTextField T="string" Label="Teléfono" Mask="@(new PatternMask("0000000000"))" @bind-Value="Model.Telefono" Required="true" />
            <MudTextField T="string" Label="Ubicación" AutoGrow Lines="3" @bind-Value="Model.Ubicación" Required="true" />
            <MudTextField T="string" Label="Descripción" AutoGrow Lines="3" @bind-Value="Model.Descripcion" Required="true" />
    </DialogContent>
    <DialogActions>
       <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary">Crear</MudButton>
       <MudButton Variant="Variant.Filled" Color="Color.Secondary" @onclick="CancelarCreacion">Cancelar</MudButton>
    </DialogActions>
</MudDialog>
</EditForm>

@code {
    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; }

    [Parameter] 
    public DepartamentoInsertDTO Model { get; set; }

    [Parameter] 
    public EventCallback OnClose { get; set; }

    private DepartamentoInsertDTO nuevoDepartamento = new DepartamentoInsertDTO();

    protected override void OnParametersSet()
    {
        nuevoDepartamento = Model;
    }

    private async Task CrearNuevoDepartamento()
    {
        var success = await DepartamentosService.CreateDepartamento(nuevoDepartamento);
        if (success.IsSuccessStatusCode)
        {
            await OnClose.InvokeAsync(null);
            MudDialog.Close(DialogResult.Ok(true));
        }
        else
        {
            var problemDetails = await success.Content.ReadFromJsonAsync<ProblemDetailsFront>();
            if (problemDetails != null)
            {
                await DialogService.ShowMessageBox("Error", problemDetails.Detail ?? "Error al crear el nuevo departamento");
            }
        }
    }

    private void CancelarCreacion()
    {
        MudDialog.Cancel();
    }
}
