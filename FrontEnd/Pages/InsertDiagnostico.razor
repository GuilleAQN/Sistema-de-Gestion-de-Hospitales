@using Sistema_de_Gestion_de_Hospitales.FrontEnd.Interfaces
@using System.ComponentModel.DataAnnotations
@using Sistema_de_Gestion_de_Hospitales.Shared
@using MudBlazor

@inject ISnackbar Snackbar
@inject IDiagnosticosService DiagnosticosService
@inject IPacientesService PacientesService
@inject IDoctoresService DoctoresService
@inject IDialogService DialogService

<PageTitle>Insertando Diagnostico</PageTitle>

<EditForm Model="@Model" OnValidSubmit="CrearNuevoDiagnostico">
<MudDialog>
    <DialogContent>
        <DataAnnotationsValidator />
        <ValidationSummary />
            <MudSelect T="int" Label="Doctor" @bind-Value="@Model.IdDoctor" HelperText="@doctoresText" ToStringFunc="@((int id) => doctores.FirstOrDefault(d => d.IdDoctor == id)?.NombreCompleto)">
            @if (doctores != null)
            {
               @foreach (var doctor in doctores)
               {
                   <MudSelectItem T="int" Value="doctor.IdDoctor">@doctor.NombreCompleto</MudSelectItem>
               }
            }
            </MudSelect>
            <MudSelect Label="Pacientes" @bind-Value="@Model.IdPaciente" HelperText="@pacientesText" ToStringFunc="@((int id) => pacientes.FirstOrDefault(d => d.IdPaciente == id)?.NombreCompleto)">
            @if (pacientes != null)
            {
                @foreach (var paciente in pacientes)
                {
                    <MudSelectItem T="int" Value="paciente.IdPaciente">@paciente.NombreCompleto</MudSelectItem>
                }
            }
        </MudSelect>
        <MudDatePicker PickerVariant="PickerVariant.Dialog" @bind-Date="@fecha" Label="Fecha Agendada" />
        <MudTextField T="string" Label="Descripción" AutoGrow Lines="3" @bind-Value="Model.Descripcion" Required="true" />
    </DialogContent>
    <DialogActions>
       <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary">Crear</MudButton>
       <MudButton Variant="Variant.Filled" Color="Color.Secondary" @onclick="CancelarCreacion">Cancelar</MudButton>
    </DialogActions>
</MudDialog>
</EditForm>

@code {
    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; }

    [Parameter] 
    public DiagnosticoInsertDTO Model { get; set; }

    [Parameter] 
    public EventCallback OnClose { get; set; }

    private DiagnosticoInsertDTO nuevoDiagnostico = new DiagnosticoInsertDTO();

    private DateTime? fecha = DateTime.Now;

    private IEnumerable<PacienteGetDTO> pacientes;
    private IEnumerable<DoctorGetDTO> doctores;

    private string doctoresText { get; set; } = "Cargando doctores...";
    private string pacientesText { get; set; } = "Cargando pacientes...";

    protected override async Task OnInitializedAsync()
    {
        Model.Fecha = DateOnly.FromDateTime(fecha.Value);
        pacientes = await CargarPacientesAsync();
        doctores = await CargarDoctoresAsync();
        doctoresText = doctores.Any() ? string.Empty : "No se encontraron doctores.";
        pacientesText = pacientes.Any() ? string.Empty : "No se encontraron pacientes.";
    }

    private async Task<IEnumerable<PacienteGetDTO>> CargarPacientesAsync()
    {
        return await PacientesService.GetPacientes();
    }

    private async Task<IEnumerable<DoctorGetDTO>> CargarDoctoresAsync()
    {
        return await DoctoresService.GetDoctores();
    }

    protected override void OnParametersSet()
    {
        nuevoDiagnostico = Model;
    }

    private async Task CrearNuevoDiagnostico()
    {
        nuevoDiagnostico.Fecha = DateOnly.FromDateTime(fecha.Value);
        var success = await DiagnosticosService.CreateDiagnostico(nuevoDiagnostico);
        if (success.IsSuccessStatusCode)
        {
            await OnClose.InvokeAsync(null);
            MudDialog.Close(DialogResult.Ok(true));
        }
        else
        {
            var problemDetails = await success.Content.ReadFromJsonAsync<ProblemDetailsFront>();
            if (problemDetails != null)
            {
                await DialogService.ShowMessageBox("Error", problemDetails.Detail ?? "Error al crear el nuevo diagnostico");
            }
        }
    }

    private void CancelarCreacion()
    {
        MudDialog.Cancel();
    }
}
